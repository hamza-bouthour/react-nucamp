[{"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\index.js":"1","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\reportWebVitals.js":"2","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\App.js":"3","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js":"4","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js":"5","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js":"6","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js":"7","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js":"8","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js":"9","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\Homecomponent.js":"10","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js":"11","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js":"12","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js":"13","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js":"14","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\AboutComponent.js":"15","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\redux\\configureStore.js":"16","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\redux\\partners.js":"17","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\redux\\comments.js":"18","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\redux\\campsites.js":"19","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\redux\\promotions.js":"20","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionCreators.js":"21","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionTypes.js":"22","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\LoadingComponent.js":"23","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\redux\\forms.js":"24","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\shared\\baseUrl.js":"25"},{"size":655,"mtime":1612291374598,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1611596333087,"results":"28","hashOfConfig":"27"},{"size":619,"mtime":1613071549986,"results":"29","hashOfConfig":"27"},{"size":4330,"mtime":1613851114162,"results":"30","hashOfConfig":"27"},{"size":2765,"mtime":1613776170652,"results":"31","hashOfConfig":"27"},{"size":8797,"mtime":1613776170649,"results":"32","hashOfConfig":"27"},{"size":1242,"mtime":1612288608974,"results":"33","hashOfConfig":"27"},{"size":5310,"mtime":1612891441516,"results":"34","hashOfConfig":"27"},{"size":1944,"mtime":1612240004769,"results":"35","hashOfConfig":"27"},{"size":1903,"mtime":1613849409493,"results":"36","hashOfConfig":"27"},{"size":13154,"mtime":1613531010447,"results":"37","hashOfConfig":"27"},{"size":4243,"mtime":1612288571671,"results":"38","hashOfConfig":"27"},{"size":1054,"mtime":1612288647241,"results":"39","hashOfConfig":"27"},{"size":303,"mtime":1612288669654,"results":"40","hashOfConfig":"27"},{"size":4528,"mtime":1613851078179,"results":"41","hashOfConfig":"27"},{"size":822,"mtime":1613530489559,"results":"42","hashOfConfig":"27"},{"size":736,"mtime":1613849806096,"results":"43","hashOfConfig":"27"},{"size":640,"mtime":1613776170667,"results":"44","hashOfConfig":"27"},{"size":584,"mtime":1613529576066,"results":"45","hashOfConfig":"27"},{"size":540,"mtime":1613776170670,"results":"46","hashOfConfig":"27"},{"size":5732,"mtime":1613849932869,"results":"47","hashOfConfig":"27"},{"size":600,"mtime":1613846513153,"results":"48","hashOfConfig":"27"},{"size":243,"mtime":1613528983064,"results":"49","hashOfConfig":"27"},{"size":176,"mtime":1613530451829,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1613776170675,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"jui1u1",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\index.js",[],["107","108"],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\reportWebVitals.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\App.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js",["109","110","111","112","113","114"],"import React, { Component } from \"react\";\r\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Modal, Button, ModalHeader, ModalBody, ModalFooter, Row, Col, Label} from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\n// import ModalHeader from \"reactstrap/lib/ModalHeader\";\r\nimport { Loading } from './LoadingComponent';\r\nimport { Control, LocalForm, Errors, option } from 'react-redux-form';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isModalOpen: false,\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n    onSubmit(values) {  \r\n        console.log(values)\r\n        //     for (const [key, value] of Object.entries(values)) {\r\n        //     console.log(`${key}: ${value}`);\r\n        //     alert(`${key}: ${value}`);\r\n        // }  \r\n        this.toggleModal();\r\n        this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>         \r\n                <div>\r\n                    <Button outline onClick={this.toggleModal}><i className=\"fa fa-pencil fa-lg\"></i> Submit Comment</Button>\r\n                </div>\r\n                <div>\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>Feedback</ModalHeader>\r\n                        <ModalBody>    \r\n                            <LocalForm onSubmit={values => this.onSubmit(values)}>\r\n                                    <div className=\"form-group\">\r\n                                        <Label htmlFor=\"rating\">Rating</Label>                                  \r\n                                            <Control.select id=\"rating\" \r\n                                            model=\".rating\" \r\n                                            name=\"rating\"\r\n                                            className=\"form-control\" value=\"5\"> \r\n                                                <option value=\"1\">1</option>\r\n                                                <option value=\"2\">2</option>\r\n                                                <option value=\"3\">3</option>\r\n                                                <option value=\"4\">4</option>\r\n                                                <option value=\"5\" selected=\"selected\">5</option>\r\n                                            </Control.select>  \r\n                                    </div>  \r\n                                    <div className=\"form-group\">  \r\n                                        <Label  htmlfor=\"author\">Your name</Label>\r\n                                        <Control.text id=\"author\"\r\n                                        model=\".author\"\r\n                                        name=\"author\"\r\n                                        placeholder=\"Your name\" \r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}>\r\n                                        </Control.text>\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".author\"\r\n                                            show=\"touched\"\r\n                                            component=\"div\"\r\n                                            messages={{\r\n                                                required: 'field required',\r\n                                                minLength: 'minimum 2 caracters',\r\n                                                maxLength: 'maximum 15 caracters' \r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <Label htmlFor=\"text\">Your feedback</Label>\r\n                                            <Control.textarea id=\"text\" \r\n                                            model=\".text\"\r\n                                            name=\"text\" \r\n                                            rows={6} \r\n                                            className=\"form-control\" \r\n                                            placeholder=\"Your text here\">\r\n                                            </Control.textarea>\r\n                                    </div>\r\n                                    <div>\r\n                                        <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                                    </div>\r\n                            </LocalForm>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            </div>  \r\n        )\r\n    }\r\n} \r\nfunction RenderCampsite({campsite}) {\r\n    return (\r\n        <div className=\"col-md-5 m-1\">\r\n        <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n            <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\r\n                <CardBody>\r\n                    <CardText>{campsite.description}</CardText>\r\n                    \r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    )\r\n}\r\nfunction RenderComment({comments, postComment, campsiteId}) {\r\n    if (comments) {\r\n\r\n            return (     \r\n                <div className=\"col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <Stagger in>\r\n                {\r\n                    comments.map(comment => {\r\n                        return (\r\n                            <Fade in key={comment.id}>\r\n                            <div>\r\n                                <p>{comment.text}</p>\r\n                                <p>--{comment.author},{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                            </div>   \r\n                            </Fade>           \r\n                        )\r\n                    })\r\n                }\r\n                </Stagger>  \r\n                    <CommentForm campsiteId={campsiteId} postComment={postComment} />\r\n                </div> \r\n            )};\r\n    return <div />\r\n    \r\n}\r\nfunction CampsiteInfo(props) {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.campsite) {\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <h2>{props.campsite.name}</h2>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n                <div className=\"row\">\r\n                \r\n                    <RenderCampsite campsite={props.campsite} />\r\n                    <RenderComment\r\n                      comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        campsiteId={props.campsite.id}                       \r\n                    />\r\n                </div>\r\n            </div>\r\n           \r\n        )\r\n    }\r\n    return <div />;\r\n}\r\n\r\n\r\n\r\n   \r\n        \r\n    \r\n\r\n\r\n\r\n\r\n\r\nexport default CampsiteInfo;","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\Homecomponent.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js",["115","116","117","118","119","120","121","122"]," import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Label, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Form, Errors, actions, Control } from 'react-redux-form';\r\n\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\nconst isNumber = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component  {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'By Phone',\r\n            feedback: '',\r\n            touched: {\r\n                firstName: false,\r\n                lastName: false,\r\n                phoneNum: false,\r\n                email: false\r\n            }\r\n        }\r\n\r\n        // this.handleInputChange = this.handleInputChange.bind(this);\r\n        // this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    // handleInputChange(event) {\r\n    //     const target = event.target;\r\n    //     const name = target.name;\r\n    //     const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    \r\n    //     this.setState({\r\n    //         [name]: value\r\n    //     });\r\n    // }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n    // handleBlur = (field) => () => {\r\n    //     this.setState({\r\n    //         touched: {...this.state.touched, [field]: true}\r\n    //     })\r\n    // }\r\n    // validate(firstName, lastName, phoneNum, email) {\r\n    //     const errors = {\r\n    //         firstName: '',\r\n    //         lastname: '',\r\n    //         phoneNum: '',\r\n    //         email: ''\r\n    //     }\r\n    //     if (this.state.touched.firstName) {\r\n    //         if (firstName.length < 2) {\r\n    //             errors.firstName = 'First name must be at least 2 caracters.';\r\n    //         } else if (firstName.length > 15) {\r\n    //             errors.firstName = 'First name must be 15 or less caracters.';\r\n    //         }\r\n    //     }\r\n    //     if (this.state.touched.lastName) {\r\n    //         if (lastName.length < 2) {\r\n    //             errors.lastname = 'Last name must be at least 2 caracters.';\r\n    //         } else if (lastName.length > 15) {\r\n    //             errors.lastname = 'Last name must be 15 or less caracters.';\r\n    //         }\r\n    //     }\r\n    //     const reg = /^\\d+$/;\r\n    //     if (this.state.touched.phoneNum && !reg.test(phoneNum)) {\r\n    //         errors.phoneNum = 'The phone number should contain only numbers.'\r\n    //     }\r\n    //     if (this.state.touched.phoneNum && !email.includes(\"@\")) {\r\n    //         errors.email = 'Email should contain a @.'\r\n    //     }\r\n    //     return errors;\r\n    // }\r\n    render () {\r\n        // const errors = this.validate(this.state.firstName, this.state.lastName, this.state.phoneNum, this.state.email)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h2>Contact Us</h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n    \r\n                <div className=\"row row-content align-items-center\">\r\n                    <div className=\"col-sm-4\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            1 Nucamp Way<br />\r\n                            Seattle, WA 98001<br />\r\n                            U.S.A.\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Send us your Feedback</h2>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"col-md-10\">\r\n                    <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, \r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\r\n                                        placeholder=\"Phone number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(10),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".phoneNum\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 10 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 4, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox\r\n                                                model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>By Phone</option>\r\n                                        <option>By Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            \r\n\r\n        </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Contact;","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js",[],["123","124"],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\AboutComponent.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\redux\\configureStore.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\redux\\partners.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\redux\\comments.js",["125"],"import { COMMENTS } from '../shared/comments';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments: []}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            const comment = action.payload;\r\n   \r\n            return {...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\redux\\campsites.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\redux\\promotions.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionCreators.js",["126"],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionTypes.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\components\\LoadingComponent.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\redux\\forms.js",[],"C:\\Users\\dave\\Desktop\\My school\\NucampFolder\\3-React\\nucampsite\\src\\shared\\baseUrl.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":2,"column":112,"nodeType":"133","messageId":"134","endLine":2,"endColumn":123},{"ruleId":"131","severity":1,"message":"135","line":2,"column":125,"nodeType":"133","messageId":"134","endLine":2,"endColumn":128},{"ruleId":"131","severity":1,"message":"136","line":2,"column":130,"nodeType":"133","messageId":"134","endLine":2,"endColumn":133},{"ruleId":"137","severity":1,"message":"138","line":52,"column":45,"nodeType":"139","endLine":55,"endColumn":80},{"ruleId":"137","severity":1,"message":"140","line":65,"column":41,"nodeType":"139","endLine":74,"endColumn":44},{"ruleId":"137","severity":1,"message":"141","line":90,"column":45,"nodeType":"139","endLine":95,"endColumn":74},{"ruleId":"131","severity":1,"message":"142","line":5,"column":23,"nodeType":"133","messageId":"134","endLine":5,"endColumn":30},{"ruleId":"137","severity":1,"message":"140","line":128,"column":37,"nodeType":"139","endLine":136,"endColumn":39},{"ruleId":"137","severity":1,"message":"140","line":153,"column":37,"nodeType":"139","endLine":161,"endColumn":39},{"ruleId":"137","severity":1,"message":"140","line":178,"column":37,"nodeType":"139","endLine":187,"endColumn":39},{"ruleId":"137","severity":1,"message":"140","line":205,"column":37,"nodeType":"139","endLine":212,"endColumn":39},{"ruleId":"137","severity":1,"message":"143","line":229,"column":45,"nodeType":"139","endLine":233,"endColumn":47},{"ruleId":"137","severity":1,"message":"138","line":239,"column":37,"nodeType":"139","endLine":240,"endColumn":66},{"ruleId":"137","severity":1,"message":"141","line":249,"column":37,"nodeType":"139","endLine":252,"endColumn":39},{"ruleId":"127","replacedBy":"144"},{"ruleId":"129","replacedBy":"145"},{"ruleId":"131","severity":1,"message":"146","line":1,"column":10,"nodeType":"133","messageId":"134","endLine":1,"endColumn":18},{"ruleId":"131","severity":1,"message":"147","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":19},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'ModalFooter' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'actions' is defined but never used.","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["148"],["149"],"'COMMENTS' is defined but never used.","'CAMPSITES' is defined but never used.","no-global-assign","no-unsafe-negation"]